; Dummy ROM for simulator
;
; Assemble with:
;
; python3 ~/bin/xas99.py -R -b dummyrom.a99

romws	equ >8300
intws   equ >8320
utilws  equ >8340

vdpwa	equ >8c02
vdprd	equ >8800
vdpwd	equ >8c00
vdpsta  equ >8802

	aorg >0000

; reset and VDP interrupt vectors

	data romws, romstart
	data intws, intstart

romstart:
	limi 0
	bl @setupvdp

	bl @showmsg
	data msg_1
	bl @showmsg
	data msg_2
	bl @showmsg
	data msg_3
	bl @showmsg
	data msg_4
	bl @showmsg
	data msg_5
	
	; clear interrupt workspace
	li r1, 15
!
	clr @intws (r1)
	dec r1
	joc -!
	
	; enable VDP interrupts
	clr r12
	sbo 2
	limi 1
done:
	jmp done

; showmsg - display string at position given in first two bytes of string constant

showmsg:
	mov *r11+, r2
	movb *r2+, r0
	sra r0, 8		; x
	movb *r2+, r1
	sra r1, 8
	sla r1, 3
	a r1, r0
	sla r1, 2
	a r1, r0		; add 40*y
	blwp @setvdpwa

	clr r0
!
	movb *r2+, r1
	cb r1, r0
	jeq !
	movb r1, @vdpwd
	jmp -!
!
	rt

; setupvdp - initialise VDP registers and character table

setupvdp:
	movb @vdpsta, r0
	li r0, >8000
	li r1, vdpregs
	li r2, 8
!
	movb *r1+, @vdpwa
	nop
	movb r0, @vdpwa
	ai r0, >0100
	dec r2
	jne -!

	; load character set
	li r0, >0800 + (8 * 32)
	blwp @setvdpwa
	
	li r1, charset_begin
	li r2, charset_end - charset_begin
!
	movb *r1+, @vdpwd
	dec r2
	jne -!

	; clear screen	
	clr r0
	blwp @setvdpwa
	li r0, >2000	; blank
	li r1, 24*40
!
	movb r0, @vdpwd
	dec r1
	jne -!

	rt

; Test routine for VPD interrupt: display uptime as hh:mm::ss
; Upon entry, the interrupt level has been decremented to 0 as 'limi 1' is used.

intstart:
	movb @vdpsta, r0	; clear VDP interrupt
	inc r1
	ci r1, 50		; console with 50 interrupts/sec
	jl !!
	clr r1
	
	inc r2			; r2: seconds
	ci r2, 60
	jl !
	clr r2
	
	inc r3			; r3: minutes
	ci r3, 60
	jl !
	clr r3
	
	inc r4			; r4: hours
	ci r4, 24
	jl !
	clr r4
!
	li r0, 32
	blwp @setvdpwa
	
	mov r4, r7
	bl @disp_dec2
	movb @colon, @vdpwd
	
	mov r3, r7
	bl @disp_dec2
	movb @colon, @vdpwd

	mov r2, r7
	bl @disp_dec2
!
	rtwp
	
disp_dec2:
	li r5, 10
	clr r6
	div r5, r6
	ai r6, 48
	ai r7, 48
	swpb r6
	movb r6, @vdpwd
	swpb r7
	movb r7, @vdpwd
	rt

; utilities

; setvdpwa
; R0: write address to set

setvdpwa:
	data utilws, !
!
	mov *r13, r0
	ori r0, >4000
	swpb r0
	movb r0, @vdpwa
	swpb r0
	movb r0, @vdpwa
	
	rtwp

; initialized data
	
msg_1 	text >06, >03, 'This is Emul99 - dummy ROM', >00
msg_2	text >00, >06, 'The original ROMs are copyrighted and', >00
msg_3   text >00, >07, 'cannot be included in the simulator.', >00
msg_4   text >00, >0a, 'See readme.md for details where the', >00
msg_5   text >00, >0b, 'ROM files need to be installed.', >00
colon   byte ':'

; text mode, screen image table at >0000, character table at >0800

vdpregs:
	byte >00, >f0, >00, >00, >01, >00, >00, >17

; Character definitions are taken from the X11 font 5x8.pcf 

charset_begin:
        byte >00, >00, >00, >00, >00, >00, >00, >00   ; 32:  
        byte >00, >20, >20, >20, >20, >00, >20, >00   ; 33: !
        byte >00, >50, >50, >50, >00, >00, >00, >00   ; 34: "
        byte >50, >50, >F8, >50, >F8, >50, >50, >00   ; 35: #
        byte >20, >70, >A0, >70, >28, >70, >20, >00   ; 36: $
        byte >00, >40, >50, >20, >50, >10, >00, >00   ; 37: %
        byte >40, >A0, >A0, >40, >A0, >A0, >50, >00   ; 38: &
        byte >00, >20, >20, >20, >00, >00, >00, >00   ; 39: '
        byte >00, >20, >40, >40, >40, >40, >20, >00   ; 40: (
        byte >00, >40, >20, >20, >20, >20, >40, >00   ; 41: )
        byte >00, >00, >90, >60, >F0, >60, >90, >00   ; 42: *
        byte >00, >00, >20, >20, >F8, >20, >20, >00   ; 43: +
        byte >00, >00, >00, >00, >00, >30, >20, >40   ; 44: ,
        byte >00, >00, >00, >00, >F0, >00, >00, >00   ; 45: -
        byte >00, >00, >00, >00, >00, >20, >70, >20   ; 46: .
        byte >00, >10, >10, >20, >40, >80, >80, >00   ; 47: /
        byte >00, >20, >50, >50, >50, >50, >20, >00   ; 48: 0
        byte >00, >20, >60, >20, >20, >20, >70, >00   ; 49: 1
        byte >00, >60, >90, >10, >60, >80, >F0, >00   ; 50: 2
        byte >00, >F0, >20, >60, >10, >90, >60, >00   ; 51: 3
        byte >00, >20, >60, >A0, >F0, >20, >20, >00   ; 52: 4
        byte >00, >F0, >80, >E0, >10, >90, >60, >00   ; 53: 5
        byte >00, >60, >80, >E0, >90, >90, >60, >00   ; 54: 6
        byte >00, >F0, >10, >20, >20, >40, >40, >00   ; 55: 7
        byte >00, >60, >90, >60, >90, >90, >60, >00   ; 56: 8
        byte >00, >60, >90, >90, >70, >10, >60, >00   ; 57: 9
        byte >00, >00, >60, >60, >00, >60, >60, >00   ; 58: :
        byte >00, >00, >30, >30, >00, >30, >20, >40   ; 59: ;
        byte >00, >10, >20, >40, >40, >20, >10, >00   ; 60: <
        byte >00, >00, >00, >F0, >00, >F0, >00, >00   ; 61: =
        byte >00, >40, >20, >10, >10, >20, >40, >00   ; 62: >
        byte >00, >20, >50, >10, >20, >00, >20, >00   ; 63: ?
        byte >30, >48, >98, >A8, >A8, >90, >40, >30   ; 64: @
        byte >00, >60, >90, >90, >F0, >90, >90, >00   ; 65: A
        byte >00, >E0, >90, >E0, >90, >90, >E0, >00   ; 66: B
        byte >00, >60, >90, >80, >80, >90, >60, >00   ; 67: C
        byte >00, >E0, >90, >90, >90, >90, >E0, >00   ; 68: D
        byte >00, >F0, >80, >E0, >80, >80, >F0, >00   ; 69: E
        byte >00, >F0, >80, >E0, >80, >80, >80, >00   ; 70: F
        byte >00, >60, >90, >80, >B0, >90, >60, >00   ; 71: G
        byte >00, >90, >90, >F0, >90, >90, >90, >00   ; 72: H
        byte >00, >70, >20, >20, >20, >20, >70, >00   ; 73: I
        byte >00, >70, >20, >20, >20, >A0, >40, >00   ; 74: J
        byte >00, >90, >A0, >C0, >A0, >A0, >90, >00   ; 75: K
        byte >00, >80, >80, >80, >80, >80, >F0, >00   ; 76: L
        byte >00, >90, >F0, >F0, >90, >90, >90, >00   ; 77: M
        byte >00, >90, >D0, >F0, >B0, >B0, >90, >00   ; 78: N
        byte >00, >60, >90, >90, >90, >90, >60, >00   ; 79: O
        byte >00, >E0, >90, >90, >E0, >80, >80, >00   ; 80: P
        byte >00, >60, >90, >90, >D0, >B0, >60, >10   ; 81: Q
        byte >00, >E0, >90, >90, >E0, >90, >90, >00   ; 82: R
        byte >00, >60, >90, >40, >20, >90, >60, >00   ; 83: S
        byte >00, >70, >20, >20, >20, >20, >20, >00   ; 84: T
        byte >00, >90, >90, >90, >90, >90, >60, >00   ; 85: U
        byte >00, >90, >90, >90, >90, >60, >60, >00   ; 86: V
        byte >00, >90, >90, >90, >F0, >F0, >90, >00   ; 87: W
        byte >00, >90, >90, >60, >60, >90, >90, >00   ; 88: X
        byte >00, >88, >88, >50, >20, >20, >20, >00   ; 89: Y
        byte >00, >F0, >10, >20, >40, >80, >F0, >00   ; 90: Z
        byte >00, >70, >40, >40, >40, >40, >70, >00   ; 91: [
        byte >00, >80, >80, >40, >20, >10, >10, >00   ; 92: \
        byte >00, >70, >10, >10, >10, >10, >70, >00   ; 93: ]
        byte >00, >20, >50, >00, >00, >00, >00, >00   ; 94: ^
        byte >00, >00, >00, >00, >00, >00, >00, >F0   ; 95: _
        byte >00, >40, >20, >00, >00, >00, >00, >00   ; 96: `
        byte >00, >00, >00, >70, >90, >90, >70, >00   ; 97: a
        byte >00, >80, >80, >E0, >90, >90, >E0, >00   ; 98: b
        byte >00, >00, >00, >30, >40, >40, >30, >00   ; 99: c
        byte >00, >10, >10, >70, >90, >90, >70, >00   ; 100: d
        byte >00, >00, >00, >60, >B0, >C0, >60, >00   ; 101: e
        byte >00, >20, >50, >40, >E0, >40, >40, >00   ; 102: f
        byte >00, >00, >00, >60, >90, >70, >10, >60   ; 103: g
        byte >00, >80, >80, >E0, >90, >90, >90, >00   ; 104: h
        byte >00, >20, >00, >60, >20, >20, >70, >00   ; 105: i
        byte >00, >10, >00, >10, >10, >10, >50, >20   ; 106: j
        byte >00, >80, >80, >90, >E0, >90, >90, >00   ; 107: k
        byte >00, >60, >20, >20, >20, >20, >70, >00   ; 108: l
        byte >00, >00, >00, >D0, >A8, >A8, >A8, >00   ; 109: m
        byte >00, >00, >00, >E0, >90, >90, >90, >00   ; 110: n
        byte >00, >00, >00, >60, >90, >90, >60, >00   ; 111: o
        byte >00, >00, >00, >E0, >90, >E0, >80, >80   ; 112: p
        byte >00, >00, >00, >70, >90, >70, >10, >10   ; 113: q
        byte >00, >00, >00, >A0, >D0, >80, >80, >00   ; 114: r
        byte >00, >00, >00, >30, >60, >10, >60, >00   ; 115: s
        byte >00, >40, >40, >E0, >40, >50, >20, >00   ; 116: t
        byte >00, >00, >00, >90, >90, >90, >70, >00   ; 117: u
        byte >00, >00, >00, >50, >50, >50, >20, >00   ; 118: v
        byte >00, >00, >00, >88, >A8, >A8, >50, >00   ; 119: w
        byte >00, >00, >00, >90, >60, >60, >90, >00   ; 120: x
        byte >00, >00, >00, >90, >90, >70, >90, >60   ; 121: y
        byte >00, >00, >00, >F0, >20, >40, >F0, >00   ; 122: z
        byte >30, >40, >20, >C0, >20, >40, >30, >00   ; 123: {
        byte >00, >20, >20, >20, >20, >20, >20, >00   ; 124: |
        byte >C0, >20, >40, >30, >40, >20, >C0, >00   ; 125: }
        byte >00, >50, >A0, >00, >00, >00, >00, >00   ; 126: ~
        byte >00, >50, >A0, >00, >00, >00, >00, >00   ; 127: 
charset_end:

	end